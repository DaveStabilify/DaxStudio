<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:fluent="urn:fluent-ribbon" x:Class="DaxStudio.UI.Views.OptionsView" 
             xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
             xmlns:beh="clr-namespace:DaxStudio.UI.Behaviours"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d" 
             d:DesignHeight="587.195" d:DesignWidth="900">
    <UserControl.Resources>
        <ResourceDictionary>
            <conv:FontConverter x:Key="fontConverter"/>
            <conv:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
            <conv:BoolToNotVisibleConverter x:Key="BoolToNotVisibleConverter" />
            <Style TargetType="{x:Type xctk:WatermarkTextBox}">
                <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="False">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="False">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type PasswordBox}">
                <Style.Triggers>
                    <Trigger Property="Focusable" Value="False">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                    <Trigger Property="Focusable" Value="True">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--<Style TargetType="{x:Type TextBox}">
                <Style.Resources>
                    <SolidColorBrush 
                    x:Key="{x:Static SystemColors.ControlBrushKey}" 
                    Color="Blue" />
                </Style.Resources>
            </Style>-->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml"/>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>


    </UserControl.Resources>
    <Grid Margin="35,25,5,5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <Label Content="Options" Foreground="{StaticResource DaxStudioBrush}" FontSize="56" FontWeight="Light" 
			Grid.Row="0"
			Grid.Column="0"/>
        <!-- Editor -->
        <TabControl Grid.Row="1">
            <TabItem Header="Standard">
                <ScrollViewer Name="MyScrollViewer" Grid.Row="1" Grid.Column="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Margin="0,0,0,-42.5" >
                    <WrapPanel Width="{Binding ElementName=MyScrollViewer, Path=ViewportWidth}" Orientation="Horizontal">
                        <GroupBox Header="Editor" Margin="0,0,10,0" MinWidth="300"  Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                
                                <Label Grid.Row="0" Grid.Column="0" Content="Font Family"/>
                                <ComboBox x:Name="EditorFontFamily" Grid.Row="0" Grid.Column="1"
			                        xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
			                        ItemTemplate="{DynamicResource FontTemplate}"
                                    SelectedItem="{Binding Path=EditorFontFamily, Mode=TwoWay, Converter={StaticResource fontConverter}}"
                                    IsSynchronizedWithCurrentItem="True"
                                    VerticalContentAlignment="Center"      >
                                    <ComboBox.Resources>

                                        <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                                            <CollectionViewSource.SortDescriptions>
                                                <ComponentModel:SortDescription PropertyName="Source" />
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>

                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <StackPanel VirtualizingStackPanel.IsVirtualizing="True">
                                                <TextBlock Style="{StaticResource FontStyle}"
                                           Text="{Binding Source}"
                                           ToolTip="{Binding Source}" />
                                            </StackPanel>
                                        </DataTemplate>

                                    </ComboBox.Resources>

                                    <ComboBox.ItemsSource>
                                        <Binding Source="{StaticResource myFonts}" />
                                    </ComboBox.ItemsSource>
                                </ComboBox>
                                <Label Grid.Row="1" Grid.Column="0" Content="Font Size"/>
                                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" x:Name="EditorFontSize" Width="60" HorizontalAlignment="Left" Margin="0,2,0,2"></xctk:DoubleUpDown>
                                <!--<fluent:Spinner x:Name="EditorFontSize" Grid.Column="1" HorizontalAlignment="Left" Grid.Row="5" VerticalAlignment="Center" Margin="-12" Padding="0" />-->
                                <Label Grid.Row="2" Grid.Column="0" Content="Show Line Numbers"/>
                                <CheckBox  x:Name="EditorShowLineNumbers" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" />
                                <Label Grid.Row="3" Grid.Column="0" Content="Enable Intellisense"/>
                                <CheckBox Grid.Row="3" Grid.Column="1" x:Name="EditorEnableIntellisense" VerticalAlignment="Center" />
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Proxy" MinWidth="300"  Width="375" Margin="0,0,10,0" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Content="Use System Proxy"/>
                                <CheckBox Grid.Row="0" Grid.Column="1" x:Name="ProxyUseSystem" VerticalAlignment="Center"/>
                                <Label Grid.Row="1" Grid.Column="0" Content="Proxy Address:" IsEnabled="{Binding Path=ProxyDontUseSystem}" />
                                <xctk:WatermarkTextBox Grid.Row="1" Grid.Column="1" Name="ProxyAddress" MinWidth="250" Margin="0,2,0,2" IsEnabled="{Binding Path=ProxyDontUseSystem}" Watermark="eg. http://myproxy.com:8080" IsReadOnly="{Binding Path=ProxyUseSystem}"  />
                                <Label Grid.Row="2" Grid.Column="0" Content="Proxy User:" IsEnabled="{Binding Path=ProxyDontUseSystem}"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Name="ProxyUser" Margin="0,2,0,2"  IsEnabled="{Binding Path=ProxyDontUseSystem}" IsReadOnly="{Binding Path=ProxyUseSystem}"/>
                                <Label Grid.Row="3" Grid.Column="0" Content="Proxy Password:" IsEnabled="{Binding Path=ProxyDontUseSystem}" />
                                <PasswordBox Grid.Row="3" Grid.Column="1" Name="ProxyPassword" Margin="0,2,0,2"  IsEnabled="{Binding Path=ProxyDontUseSystem}" Focusable="{Binding Path=ProxyDontUseSystem}">
                                    <i:Interaction.Behaviors>
                                        <beh:PasswordBoxBindingBehavior SecurePassword="{Binding ProxySecurePassword}"/>
                                    </i:Interaction.Behaviors>
                                </PasswordBox>
                            </Grid>
                        </GroupBox>
                        <!-- Query History -->
                        <GroupBox Header="Query History"  Margin="0,0,10,0" MinWidth="300"  Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Content="History Items to Keep:"/>
                                <xctk:IntegerUpDown x:Name="QueryHistoryMaxItems" Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="500" Margin="2" Width="80" HorizontalAlignment="Left"></xctk:IntegerUpDown>
                                <Label Grid.Row="1" Grid.Column="0" Content="Show Trace Timings:"/>
                                <CheckBox Grid.Row="1" Grid.Column="1" x:Name="QueryHistoryShowTraceColumns" VerticalAlignment="Center">( Server / FE / SE timings )</CheckBox>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Timeouts"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                
                                <Label Grid.Row="0" Grid.Column="0" Content="Server Timings End Event Timeout:"/>
                                <xctk:IntegerUpDown x:Name="QueryEndEventTimeout" Grid.Row="0" Grid.Column="1" Minimum="0" Maximum="120" Margin="2" Width="80" HorizontalAlignment="Left"></xctk:IntegerUpDown>
                                <Label Grid.Row="0" Grid.Column="2" Content="seconds"/>
                                
                                <Label Grid.Row="1" Grid.Column="0" Content="DaxFormatter Request Timeout:"/>
                                <xctk:IntegerUpDown x:Name="DaxFormatterRequestTimeout" Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="120" Margin="2" Width="80" HorizontalAlignment="Left"></xctk:IntegerUpDown>
                                <Label Grid.Row="1" Grid.Column="2" Content="seconds"/>
                                
                                <Label Grid.Row="2" Grid.Column="0" Content="Trace Startup Timeout:"/>
                                <xctk:IntegerUpDown x:Name="TraceStartupTimeout" Grid.Row="2" Grid.Column="1" Minimum="0" Maximum="120" Margin="2" Width="80" HorizontalAlignment="Left"></xctk:IntegerUpDown>
                                <Label Grid.Row="2" Grid.Column="2" Content="seconds"/>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Separators"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />

                                </Grid.RowDefinitions>
                                <Label  Content="Separators:"/>
                                <ComboBox Grid.Column="1" ItemsSource="{Binding SeparatorTypes}" SelectedItem="{Binding DefaultSeparator}">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Trace"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox  Grid.Column="0" x:Name="TraceDirectQuery" VerticalAlignment="Center"/>
                                <Label Grid.Column="1" Content="DirectQuery Trace"/>

                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Version Notifications"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>

                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>



                                </Grid.RowDefinitions>
                                <CheckBox Grid.Column="0" x:Name="ShowPreReleaseNotifcations" VerticalAlignment="Top" Margin="2,7,2,0" />
                                <Label  Grid.Column="1" Content="Show Pre-Releases"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0">This will give early access to new features, but may not be as stable as the production releases</TextBlock>

                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Metadata Tooltips"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>

                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="1" Content="Show Basic Statistics"/>
                                <Label Grid.Row="1" Grid.Column="1" Content="Show Sample Data"/>
                                <CheckBox Grid.Column="0" x:Name="ShowTooltipBasicStats" VerticalAlignment="Top" Margin="2,7,2,0" />
                                <CheckBox Grid.Column="0" Grid.Row="1" x:Name="ShowTooltipSampleData" VerticalAlignment="Top" Margin="2,7,2,0" />


                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Results"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <StackPanel Orientation="Vertical">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>

                                    <ColumnDefinition Width="*"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Font Family"/>
                                <ComboBox x:Name="ResultFontFamily" Grid.Row="0" Grid.Column="1"
			                        xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
			                        ItemTemplate="{DynamicResource FontTemplate}"
                                    SelectedItem="{Binding Path=ResultFontFamily, Mode=TwoWay, Converter={StaticResource fontConverter}}"
                                    IsSynchronizedWithCurrentItem="True"
                                    VerticalContentAlignment="Center"      >
                                    <ComboBox.Resources>

                                        <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                                            <CollectionViewSource.SortDescriptions>
                                                <ComponentModel:SortDescription PropertyName="Source" />
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>

                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <StackPanel VirtualizingStackPanel.IsVirtualizing="True">
                                                <TextBlock Style="{StaticResource FontStyle}"
                                           Text="{Binding Source}"
                                           ToolTip="{Binding Source}" />
                                            </StackPanel>
                                        </DataTemplate>

                                    </ComboBox.Resources>

                                    <ComboBox.ItemsSource>
                                        <Binding Source="{StaticResource myFonts}" />
                                    </ComboBox.ItemsSource>
                                </ComboBox>
                                <Label Grid.Row="1" Grid.Column="0" Content="Font Size"/>
                                <xctk:DoubleUpDown Grid.Row="1" Grid.Column="1" x:Name="ResultFontSize" Width="60" HorizontalAlignment="Left" Margin="0,2,0,2"></xctk:DoubleUpDown>
                            </Grid>
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>

                                    <ColumnDefinition Width="*"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>
                            <Label Grid.Row="0" Grid.Column="1" Content="Exclude Headers when copying data" Margin="0,0,40.5,0"/>
                                <CheckBox Grid.Row="0" Grid.Column="0" x:Name="ExcludeHeadersWhenCopyingResults" VerticalAlignment="Top" Margin="2,7,2,0" Height="15" />
                                <TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,40.5,0">Setting this option will just copy the raw data from the query results pane</TextBlock>

                            </Grid>
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Header="Dax Formatter"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />

                                </Grid.RowDefinitions>
                                <Label  Content="Default Format Style:"/>
                                <ComboBox Grid.Column="1" ItemsSource="{Binding DaxFormatStyles}" SelectedItem="{Binding DefaultDaxFormatStyle}">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                            </Grid>
                        </GroupBox>
                        <!--<GroupBox Header="Logging"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                        </GroupBox>-->
                    </WrapPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Advanced">
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                    <WrapPanel>
                        <GroupBox Header="Publish Functions" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <StackPanel>
                                <Button Margin="5" Padding="3" Name="PublishDaxFunctions">Publish Functions</Button>
                                <TextBlock Margin="10,0,0,10" Foreground="{StaticResource MutedTextBrush}" Visibility="{Binding CanPublishDaxFunctions, Converter={StaticResource BoolToNotVisibleConverter}}">Publish Functions is currently running...</TextBlock>
                                <Button Margin="5" Padding="3" Name="ExportDAXFunctions">Export Functions</Button>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Preview Features" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="1" Content="Show Export Metrics button"/>

                                <CheckBox Grid.Column="0" x:Name="ShowExportMetrics" VerticalAlignment="Top" Margin="2,7,2,0" />
                                <TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0">This feature will export metrics about your data model to a .vpax file which can be imported into Vertipaq Analyzer v2</TextBlock>

                            </Grid>
                        </GroupBox>
                    </WrapPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>

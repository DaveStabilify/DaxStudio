<UserControl x:Class="DaxStudio.UI.Views.OptionsView" 
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:fluent="urn:fluent-ribbon" 
            xmlns:conv="clr-namespace:DaxStudio.UI.Converters"
            xmlns:controls="clr-namespace:DaxStudio.UI.Controls"
            xmlns:beh="clr-namespace:DaxStudio.UI.Behaviours"
            xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
            xmlns:wmc="clr-namespace:WatermarkControlsLib.Controls;assembly=WatermarkControlsLib"
            xmlns:nud="clr-namespace:NumericUpDownLib;assembly=NumericUpDownLib"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:val="clr-namespace:DaxStudio.UI.Validation"
             mc:Ignorable="d" 
            d:DesignHeight="1008" d:DesignWidth="1400">
    <UserControl.Resources>
        <ResourceDictionary>
            <conv:FontConverter x:Key="fontConverter"/>
            <conv:EnumDescriptionConverter x:Key="enumDescriptionConverter"/>
            <conv:BoolToNotVisibleConverter x:Key="BoolToNotVisibleConverter" />
            <conv:IntToDoubleConverter x:Key="IntToDoubleConverter" />
            <conv:HotKeyConverter x:Key="HotKeyConverter" />
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

            
            <Style TargetType="{x:Type wmc:WatermarkTextBox}">
                <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="False">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Style.Triggers>
                    <Trigger Property="IsReadOnly" Value="True">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                    <Trigger Property="IsReadOnly" Value="False">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type PasswordBox}">
                <Style.Triggers>
                    <Trigger Property="Focusable" Value="False">
                        <Setter Property="Background" Value="LightGray" />
                    </Trigger>
                    <Trigger Property="Focusable" Value="True">
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type GroupBox}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="MinWidth" Value="300"/>
                <Setter Property="Foreground" Value="{StaticResource DaxStudioBrush}"/>
                <Setter Property="Width" Value="375" />
                <Setter Property="Padding" Value="5"/>
            </Style>
            <!--<Style TargetType="{x:Type TextBox}">
                <Style.Resources>
                    <SolidColorBrush 
                    x:Key="{x:Static SystemColors.ControlBrushKey}" 
                    Color="Blue" />
                </Style.Resources>
            </Style>-->

            <Style x:Key="checkboxLeftSideText" TargetType="{x:Type CheckBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="FocusVisualStyle"  Value="{DynamicResource CheckBoxFocusVisual}"/>
                <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">

                            <DockPanel 
                              HorizontalAlignment="Stretch" 
                              VerticalAlignment="Top" 
                              Width="Auto" 
                              LastChildFill="True">

                                <Microsoft_Windows_Themes:BulletChrome 
                                DockPanel.Dock="Right" 
                                Margin="7,0,0,0"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                IsChecked="{TemplateBinding IsChecked}" 
                                RenderMouseOver="{TemplateBinding IsMouseOver}" 
                                RenderPressed="{TemplateBinding IsPressed}" 
                                HorizontalAlignment="Stretch" 
                                VerticalAlignment="Center" 
                                Width="Auto" 
                                Height="Auto"/>

                                <ContentPresenter 
                                Content="{TemplateBinding Content}" 
                                RecognizesAccessKey="True" 
                                Height="Auto" 
                                HorizontalAlignment="Left" />
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/IconResourceDictionary.xaml"/>
                <ResourceDictionary  Source="pack://application:,,,/DaxStudio.UI;Component/Resources/DaxStudioResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>


    </UserControl.Resources>
    <Grid Margin="35,25,5,5">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="261*"/>
            <ColumnDefinition Width="169*"/>

        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>

        </Grid.RowDefinitions>
        <Label Content="Options" Foreground="{StaticResource DaxStudioBrush}" FontSize="56" FontWeight="Light" 
			Grid.Row="0"
			Grid.Column="0" Grid.ColumnSpan="2" Margin="0,0,0,0.5"/>
        <!-- Editor -->
        <TabControl Grid.ColumnSpan="2" Margin="0,84,0,0" Grid.RowSpan="2">
            <TabItem Header="Standard">
                <ScrollViewer Name="MyScrollViewer" Grid.Row="1" Grid.Column="0" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Padding="5" >
                    <WrapPanel Width="{Binding ElementName=MyScrollViewer, Path=ViewportWidth}" Orientation="Horizontal" >
                        <GroupBox Header="Editor">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Font Family:" HorizontalAlignment="Right"/>
                                <ComboBox x:Name="EditorFontFamily" Grid.Row="0" Grid.Column="1"
			                        xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
			                        ItemTemplate="{DynamicResource FontTemplate}"
                                    SelectedItem="{Binding Path=EditorFontFamily, Mode=TwoWay, Converter={StaticResource fontConverter}}"
                                    IsSynchronizedWithCurrentItem="True"
                                    VerticalContentAlignment="Center"      >
                                    <ComboBox.Resources>

                                        <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                                            <CollectionViewSource.SortDescriptions>
                                                <ComponentModel:SortDescription PropertyName="Source" />
                                            </CollectionViewSource.SortDescriptions>
                                        </CollectionViewSource>

                                        <Style x:Key="FontStyle">
                                            <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                                            <Setter Property="Control.FontSize" Value="14" />
                                        </Style>

                                        <DataTemplate x:Key="FontTemplate">
                                            <StackPanel VirtualizingStackPanel.IsVirtualizing="True">
                                                <TextBlock Style="{StaticResource FontStyle}"
                                           Text="{Binding Source}"
                                           ToolTip="{Binding Source}" />
                                            </StackPanel>
                                        </DataTemplate>

                                    </ComboBox.Resources>

                                    <ComboBox.ItemsSource>
                                        <Binding Source="{StaticResource myFonts}" />
                                    </ComboBox.ItemsSource>
                                </ComboBox>
                                <Label Grid.Row="1" Grid.Column="0" Content="Font Size:" HorizontalAlignment="Right"/>
                                <!--<nud:NumericUpDown   Grid.Row="1" Grid.Column="1" x:Name="EditorFontSize" Value="{Binding EditorFontSize, Converter={StaticResource IntToDoubleConverter}}" StepSize="1" NumberStyle="Integer" IsReadOnly="False" Width="60" HorizontalAlignment="Left" Margin="0,2,0,2"></nud:NumericUpDown>-->
                                <nud:DoubleUpDown x:Name="ctlEditorFontSize" Value="{Binding EditorFontSize,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  MinValue="6" MaxValue="120" IsReadOnly="False" FormatString="0.0" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="2" Padding="0" />
                                <Label Grid.Row="2" Grid.Column="0" Content="Show Line Numbers:" HorizontalAlignment="Right"/>
                                <CheckBox  x:Name="EditorShowLineNumbers" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" />

                                <Label Grid.Row="3" Grid.Column="0" Content="Enable Intellisense:" HorizontalAlignment="Right"/>
                                <CheckBox Grid.Row="3" Grid.Column="1" x:Name="EditorEnableIntellisense" VerticalAlignment="Center" />

                                <Label Grid.Row="4" Grid.Column="0" Content="Keep Metadata Search Open:" HorizontalAlignment="Right"/>
                                <CheckBox Grid.Row="4" Grid.Column="1" x:Name="KeepMetadataSearchOpen" VerticalAlignment="Center" />

                                <Label Grid.Row="5" Grid.Column="0" Content="Convert Tabs to Spaces:" HorizontalAlignment="Right"/>
                                <CheckBox Grid.Row="5" Grid.Column="1" x:Name="EditorConvertTabsToSpaces" VerticalAlignment="Center" />

                                <Label Grid.Row="6" Grid.Column="0" Content="Indentation Size" HorizontalAlignment="Right"/>
                                <nud:ShortUpDown Grid.Row="6" Grid.Column="1" MinValue="1" MaxValue="25" Value="{Binding EditorIndentationSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" HorizontalAlignment="Left" x:Name="ctrlEditorIndentationSize" VerticalAlignment="Center" />

                                <Label Grid.Row="7" Grid.Column="0" Content="Intellisense Width:" HorizontalAlignment="Right"/>
                                <StackPanel Orientation="Horizontal" Grid.Row="7" Grid.Column="1">
                                    <nud:NumericUpDown x:Name="ctrlCodeCompletionWindowWidthIncrease" Value="{Binding CodeCompletionWindowWidthIncrease,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" MinValue="100" MaxValue="300" Margin="2"  HorizontalAlignment="Left"></nud:NumericUpDown>
                                    <Label  Content="% (100 - 300)"/>
                                </StackPanel>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Proxy"  >
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0"  HorizontalAlignment="Right" Content="Use System Proxy:"/>
                                <!-- Style="{StaticResource checkboxLeftSideText}" -->
                                <CheckBox Grid.Row="0" Grid.Column="1" x:Name="ProxyUseSystem" VerticalAlignment="Center" >

                                </CheckBox>
                                <Label Grid.Row="1" Grid.Column="0" Content="Proxy Address:" IsEnabled="{Binding Path=ProxyDontUseSystem}" HorizontalAlignment="Right" />
                                <wmc:WatermarkTextBox Grid.Row="1" Grid.Column="1" Name="ProxyAddress" MinWidth="250" Margin="0,2,0,2" IsEnabled="{Binding Path=ProxyDontUseSystem}" Watermark="eg. http://myproxy.com:8080" IsReadOnly="{Binding Path=ProxyUseSystem}"  />
                                <Label Grid.Row="2" Grid.Column="0" Content="Proxy User:" IsEnabled="{Binding Path=ProxyDontUseSystem}" HorizontalAlignment="Right"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Name="ProxyUser" Margin="0,2,0,2"  IsEnabled="{Binding Path=ProxyDontUseSystem}" IsReadOnly="{Binding Path=ProxyUseSystem}"/>
                                <Label Grid.Row="3" Grid.Column="0" Content="Proxy Password:" IsEnabled="{Binding Path=ProxyDontUseSystem}" HorizontalAlignment="Right"/>
                                <PasswordBox Grid.Row="3" Grid.Column="1" Name="ProxyPassword" Margin="0,2,0,2"  IsEnabled="{Binding Path=ProxyDontUseSystem}" Focusable="{Binding Path=ProxyDontUseSystem}">
                                    <i:Interaction.Behaviors>
                                        <beh:PasswordBoxBindingBehavior SecurePassword="{Binding ProxySecurePassword}"/>
                                    </i:Interaction.Behaviors>
                                </PasswordBox>
                            </Grid>
                        </GroupBox>
                        <!-- Query History -->
                        <GroupBox Header="Query History">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Grid.Column="0" Content="History Items to Keep:" HorizontalAlignment="Right"/>
                                <nud:NumericUpDown Name="ctrlQueryHistoryMaxItems" Value="{Binding QueryHistoryMaxItems,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Grid.Row="0" Grid.Column="1" MinValue="0"  MaxValue="500" Margin="2" Width="80" HorizontalAlignment="Left" IsReadOnly="False"></nud:NumericUpDown>
                                <Label Grid.Row="1" Grid.Column="0" Content="Show Trace Timings:" HorizontalAlignment="Right"/>
                                <CheckBox Grid.Row="1" Grid.Column="1" x:Name="QueryHistoryShowTraceColumns" VerticalAlignment="Center">( Server / FE / SE timings )</CheckBox>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Timeouts">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <Label Grid.Row="0" Grid.Column="0" Content="Server Timings End Event Timeout:" HorizontalAlignment="Right"/>
                                <nud:NumericUpDown Name="ctrlQueryEndEventTimeout" Value="{Binding QueryEndEventTimeout,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Grid.Row="0" Grid.Column="1" MinValue="0" MaxValue="120" Margin="2" Width="80" HorizontalAlignment="Left"></nud:NumericUpDown>
                                <Label Grid.Row="0" Grid.Column="2" Content="seconds"/>

                                <Label Grid.Row="1" Grid.Column="0" Content="DaxFormatter Request Timeout:" HorizontalAlignment="Right"/>
                                <nud:NumericUpDown Name="ctrlDaxFormatterRequestTimeout" Value="{Binding DaxFormatterRequestTimeout,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Grid.Row="1" Grid.Column="1" MinValue="0" MaxValue="120" Margin="2" Width="80" HorizontalAlignment="Left"></nud:NumericUpDown>
                                <Label Grid.Row="1" Grid.Column="2" Content="seconds"/>

                                <Label Grid.Row="2" Grid.Column="0" Content="Trace Startup Timeout:" HorizontalAlignment="Right"/>
                                <!-- x:Name="ctrlTraceStartupTimeout" -->
                                <nud:NumericUpDown  Value="{Binding TraceStartupTimeout,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="False" Grid.Row="2" Grid.Column="1" MinValue="0" MaxValue="120" Margin="2" Width="80" HorizontalAlignment="Left"></nud:NumericUpDown>
                                <Label Grid.Row="2" Grid.Column="2" Content="seconds"/>
                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Defaults">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*"/>

                                </Grid.RowDefinitions>
                                <Label  Content="Separators:"/>
                                <ComboBox Grid.Column="1" ItemsSource="{Binding SeparatorTypes}" SelectedItem="{Binding DefaultSeparator}">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                                <Label Grid.Row="1">Run Style:</Label>
                                <CheckBox  Grid.Row="1" Grid.Column="1" Margin="0,5,0,0" x:Name="SetClearCacheAsDefaultRunStyle" Content="Set 'Clear Cache and Run' as the default"/>
                                <TextBlock Grid.Row="2" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,40.5,0">This option affects the default run style that is selected when DAX Studio starts up. Any change will take effect next time DAX Studio starts up.</TextBlock>

                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Trace"  >
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>

                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <StackPanel Orientation="Horizontal" Grid.Column="1">
                                    <CheckBox  Grid.Column="0" x:Name="TraceDirectQuery" Content="DirectQuery Trace"/>
                                    <Image Source="{StaticResource QuestionIcon}" Width="16" HorizontalAlignment="Right" ToolTipService.HasDropShadow="True" Margin="5,0,0,0" >
                                        <Image.ToolTip>
                                            <Grid Width="300" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="*"/>
                                                </Grid.RowDefinitions>
                                                <TextBlock  Margin="6" Foreground="{StaticResource DaxStudioBrush}" FontWeight="Light" FontSize="14">Legacy DirectQuery Trace</TextBlock>
                                                <TextBlock TextWrapping="Wrap" Grid.Row="1" Margin="6">On servers prior to v15 (SSAS 2017) we do not trace DirectQuery events by default in the server timings pane as we have to do expensive client side filtering. Only turn this option on if you explicitly need to trace these events on a v14 or earlier data source and turn off the trace as soon as possible
                                                </TextBlock>
                                            </Grid>
                                        </Image.ToolTip>

                                    </Image>
                                </StackPanel>
                                <!--<TextBlock Grid.Row="1" Grid.Column="1" Foreground="Gray" FontStyle="Italic" TextWrapping="Wrap">On servers prior to v15 (SSAS 2017) we do not trace DirectQuery events by default in the server timings pane as we have to do expensive client side filtering. Only turn this option on if you explicitly need to trace these events on a v14 or earlier data source and turn off the trace as soon as possible</TextBlock>-->
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Results">
                            <StackPanel Orientation="Vertical">
                                <Grid Margin="5,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>

                                        <ColumnDefinition Width="*"/>

                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>

                                    </Grid.RowDefinitions>

                                    <Label Grid.Row="0" Grid.Column="0" Content="Font Family:" HorizontalAlignment="Right"/>
                                    <ComboBox x:Name="ResultFontFamily" Grid.Row="0" Grid.Column="1"
			                        xmlns:ComponentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
			                        ItemTemplate="{DynamicResource FontTemplate}"
                                    SelectedItem="{Binding Path=ResultFontFamily, Mode=TwoWay, Converter={StaticResource fontConverter}}"
                                    IsSynchronizedWithCurrentItem="True"
                                    VerticalContentAlignment="Center"      >
                                        <ComboBox.Resources>

                                            <CollectionViewSource x:Key="myFonts" Source="{Binding Source={x:Static Fonts.SystemFontFamilies}}">
                                                <CollectionViewSource.SortDescriptions>
                                                    <ComponentModel:SortDescription PropertyName="Source" />
                                                </CollectionViewSource.SortDescriptions>
                                            </CollectionViewSource>

                                            <Style x:Key="FontStyle">
                                                <Setter Property="Control.FontFamily" Value="{Binding Source}" />
                                                <Setter Property="Control.FontSize" Value="14" />
                                            </Style>

                                            <DataTemplate x:Key="FontTemplate">
                                                <StackPanel VirtualizingStackPanel.IsVirtualizing="True">
                                                    <TextBlock Style="{StaticResource FontStyle}"
                                           Text="{Binding Source}"
                                           ToolTip="{Binding Source}" />
                                                </StackPanel>
                                            </DataTemplate>

                                        </ComboBox.Resources>

                                        <ComboBox.ItemsSource>
                                            <Binding Source="{StaticResource myFonts}" />
                                        </ComboBox.ItemsSource>
                                    </ComboBox>
                                    <Label Grid.Row="1" Grid.Column="0" Content="Font Size:" HorizontalAlignment="Right"/>
                                    <nud:DoubleUpDown Value="{Binding ResultFontSize, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" FormatString="0.0" MinValue="6" MaxValue="120" IsReadOnly="False"  Grid.Row="1" Grid.Column="1" x:Name="ctrlResultFontSize" Width="60" HorizontalAlignment="Left" Margin="0,2,0,2"></nud:DoubleUpDown>
                                </Grid>
                                <Grid Margin="5,5,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="20"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>

                                    </Grid.RowDefinitions>
                                    
                                    <CheckBox Grid.Row="0" Grid.Column="0" x:Name="ScaleResultsFontWithEditor" VerticalAlignment="Top"  Height="15" Content="Scale Results Font with Editor" Grid.ColumnSpan="2" />
                                    <TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="0,0,0,5">Setting this option will cause the results font to scale when you change the zoom percentage on the editor</TextBlock>
                                    <Label Grid.Row="2" Grid.Column="1"   />
                                    <CheckBox Grid.Row="2" Grid.Column="0" x:Name="ExcludeHeadersWhenCopyingResults" Content="Exclude Headers when Copying Data" VerticalAlignment="Top" Grid.ColumnSpan="2" />
                                    <TextBlock Grid.Row="3" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="0,0,0,5">Setting this option will just copy the raw data from the query results pane</TextBlock>
                                    <CheckBox Grid.Row="4" Grid.Column="0" x:Name="ResultAutoFormat" VerticalAlignment="Top"  Content="Automatic Format Results" Grid.ColumnSpan="2"/>
                                    <TextBlock Grid.Row="5" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="0,0,0,5" >Setting this option will automatically format numbers in the query results pane if a format string is not available for a measure with the same name of the column in the output</TextBlock>

                                </Grid>
                            </StackPanel>
                        </GroupBox>
                        <!--<GroupBox Header="Excel Addin">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>

                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>



                                </Grid.RowDefinitions>
                                <Button Grid.Column="0" x:Name="ToggleExcelAddin" VerticalAlignment="Top" Margin="2,7,2,0" Content="{Binding ToggleExcelAddinCaption}" Grid.ColumnSpan="2"/>
                                <TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0" Text="{Binding ToggleExcelAddinDescription}"></TextBlock>

                            </Grid>
                        </GroupBox>-->
                        <GroupBox Header="Metadata Pane">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock>Tooltips</TextBlock>
                                <CheckBox Grid.Row="1" x:Name="ShowTooltipBasicStats" Content="Show Basic Statistics" VerticalAlignment="Top" Margin="2,7,2,0" />
                                <CheckBox Grid.Row="2" x:Name="ShowTooltipSampleData" VerticalAlignment="Top" Content="Show Sample Data" Margin="2,7,2,0" />

                                <TextBlock Grid.Row="3" Margin="0 10 0 0">Automatic Metadata Refresh</TextBlock>
                                <CheckBox Grid.Row="4" x:Name="AutoRefreshMetadataLocalMachine" Content="Local Connections (PBI Desktop/SSDT)" VerticalAlignment="Top" Margin="2,7,2,0" />
                                <CheckBox Grid.Row="5" x:Name="AutoRefreshMetadataLocalNetwork" VerticalAlignment="Top" Content="Network Connections (SSAS on-prem)" Margin="2,7,2,0" />
                                <CheckBox Grid.Row="6" x:Name="AutoRefreshMetadataCloud" VerticalAlignment="Top" Content="Cloud Connections (asazure:// or powerbi://)" Margin="2,7,2,0" />

                                <TextBlock Grid.Row="7" Margin="0 10 0 0">Hidden Objects</TextBlock>
                                <CheckBox Grid.Row="8" x:Name="ShowHiddenMetadata" Content="Show Hidden Columns, Tables and Measures" VerticalAlignment="Top" Margin="2,7,2,0" />
                                <TextBlock Grid.Row="9" Margin="0 10 0 0">Sorting</TextBlock>
                                <CheckBox Grid.Row="10" x:Name="SortFoldersFirstInMetadata" Content="Sort Folders first in metadata pane" VerticalAlignment="Top" Margin="2,7,2,0" />

                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Dax Formatter">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />

                                </Grid.RowDefinitions>
                                <Label  Content="Default Format Style:"/>
                                <ComboBox Grid.Column="1" ItemsSource="{Binding DaxFormatStyles}" SelectedItem="{Binding DefaultDaxFormatStyle}">

                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Converter={StaticResource enumDescriptionConverter}}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>

                            </Grid>
                        </GroupBox>

                        <GroupBox Header="Custom Export Format">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <GroupBox Header="CSV Delimiter:" Grid.Row="0">
                                    <StackPanel Orientation="Vertical">
                                        <RadioButton GroupName="Delimiters" x:Name="UseCultureDefaultDelimiter" Grid.Row="1" Margin="0,3" >
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Culture Default List Separator  (" />
                                                <TextBlock x:Name="CultureSpecificListDelimiter"/>
                                                <TextBlock Text=")"/>
                                            </StackPanel>

                                        </RadioButton>
                                        <RadioButton Content="Comma" GroupName="Delimiters" x:Name="UseCommaDelimiter" Grid.Row="2"  Margin="0,3"/>
                                        <RadioButton Content="Tab" GroupName="Delimiters" x:Name="UseTabDelimiter"  Grid.Row="3" Margin="0,3"/>
                                        <StackPanel Orientation="Horizontal" Grid.Row="4">
                                            <RadioButton Content="Other" GroupName="Delimiters" x:Name="UseOtherDelimiter" Margin="0,3" />
                                            <TextBox x:Name="CustomCsvDelimiter"  Width="30" Margin="10,0" IsEnabled="{Binding IsChecked, ElementName=UseOtherDelimiter}"></TextBox>
                                        </StackPanel>
                                    </StackPanel>
                                </GroupBox>
                                <CheckBox Content="Quote String Fields" x:Name="CustomCsvQuoteStringFields" Grid.Row="1" Grid.ColumnSpan="2"/>
                            </Grid>
                        </GroupBox>
                        <!--<GroupBox Header="Logging"  Margin="0,0,10,0" MinWidth="300" Width="375" Foreground="{StaticResource DaxStudioBrush}">
                        </GroupBox>-->
                    </WrapPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Key Bindings" Visibility="{Binding ShowKeyBindings, Converter={StaticResource BoolToVisibilityConverter}}">
                <ScrollViewer x:Name="AdvancedScrollViewer2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Padding="5">
                    <WrapPanel Width="{Binding ElementName=AdvancedScrollViewer2, Path=ViewportWidth}" Orientation="Horizontal" >
                        <GroupBox Header="Hotkeys">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <TextBlock Text="Click on the key binding next to a command and type a new key combination or use Esc or backspace to clear a hotkey" Foreground="Black" TextWrapping="Wrap"/>
                                <Button Content="Reset All" Grid.Column="1" x:Name="ResetKeyBindings" Height="22" Width="60"/>

                                <Label Content="Comment Selection" Grid.Row="1" Padding="2" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="1" Padding="2" >
                                    <controls:HotkeyEditorControl.Resources>
                                        <val:BindingProxy x:Key="proxy" Data="{Binding}"/>
                                    </controls:HotkeyEditorControl.Resources>
                                    <controls:HotkeyEditorControl.Hotkey>
                                        <Binding Path="HotkeyCommentSelection" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" Converter="{StaticResource HotKeyConverter}">
                                            <Binding.ValidationRules>
                                                <val:HotkeyValidationRule ValidationStep="ConvertedProposedValue">
                                                    <val:HotkeyValidationRule.Wrapper>
                                                        <val:Wrapper Options="{Binding Data, Source={StaticResource proxy}}" PropertyName="HotkeyCommentSelection"/>
                                                    </val:HotkeyValidationRule.Wrapper>
                                                </val:HotkeyValidationRule>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </controls:HotkeyEditorControl.Hotkey>
                                </controls:HotkeyEditorControl>

                                <Label Content="Uncomment Selection" Padding="2" Grid.Row="2" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="2" Padding="2" Hotkey="{Binding HotkeyUnCommentSelection, Converter={StaticResource HotKeyConverter}}"/>

                                <Label Content="Run Query" Padding="2" Grid.Row="3" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="3" Padding="2" Hotkey="{Binding HotkeyRunQuery, Converter={StaticResource HotKeyConverter}}"/>
                                <controls:HotkeyEditorControl Grid.Column="2" Grid.Row="3" Padding="2" Hotkey="{Binding HotkeyRunQueryAlt, Converter={StaticResource HotKeyConverter}}"/>
                                
                                <Label Content="Selection To Upper" Padding="2" Grid.Row="4" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="4" Padding="2" Hotkey="{Binding HotkeyToUpper, Converter={StaticResource HotKeyConverter}}"/>

                                <Label Content="Selection To Lower" Padding="2" Grid.Row="5" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="5" Padding="2" Hotkey="{Binding HotkeyToLower, Converter={StaticResource HotKeyConverter}}"/>

                                <Label Content="Open Document" Padding="2" Grid.Row="6" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="6" Padding="2" Hotkey="{Binding HotkeyOpenDocument, Converter={StaticResource HotKeyConverter}}"/>

                                <Label Content="Save Document" Padding="2" Grid.Row="7" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="7" Padding="2" Hotkey="{Binding HotkeySaveDocument, Converter={StaticResource HotKeyConverter}}"/>

                                <Label Content="New Document" Padding="2" Grid.Row="8" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="8" Padding="2" Hotkey="{Binding HotkeyNewDocument, Converter={StaticResource HotKeyConverter}}"/>

                                <Label Content="New Document with current Connection" Padding="2" Grid.Row="9" />
                                <controls:HotkeyEditorControl Grid.Column="1" Grid.Row="9" Padding="2" Hotkey="{Binding HotkeyNewDocumentWithCurrentConnection, Converter={StaticResource HotKeyConverter}}"/>
                            </Grid>
                            
                            
                        </GroupBox>
                    </WrapPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem Header="Advanced">
                <ScrollViewer x:Name="AdvancedScrollViewer" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Padding="5">
                    <WrapPanel Width="{Binding ElementName=AdvancedScrollViewer, Path=ViewportWidth}" Orientation="Horizontal" >
                        <GroupBox Header="Publish Functions">
                            <StackPanel>
                                <Button Margin="5" Padding="3" Name="PublishDaxFunctions">Publish Functions</Button>
                                <TextBlock Margin="10,0,0,10" Foreground="{StaticResource MutedTextBrush}" Visibility="{Binding CanPublishDaxFunctions, Converter={StaticResource BoolToNotVisibleConverter}}">Publish Functions is currently running...</TextBlock>
                                <Button Margin="5" Padding="3" Name="ExportDAXFunctions">Export Functions</Button>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Preview Features">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <CheckBox Grid.Column="0" x:Name="ShowExportMetrics" VerticalAlignment="Top" Content="Show Export Metrics button" Grid.ColumnSpan="2" Margin="2,7,2,0" />
                                <TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0">This feature will export metrics about your data model to a .vpax file which can be imported into Vertipaq Analyzer v2</TextBlock>

                                <CheckBox Grid.Row="2"  Grid.Column="0" x:Name="ShowExportAllData" VerticalAlignment="Top" Content="Show Export All Data button" Grid.ColumnSpan="2" Margin="2,7,2,0" />
                                <TextBlock Grid.Row="3" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0">This feature will export all data from the currently selected data model to a collection of csv files or SQL Server tables</TextBlock>

                                <CheckBox Grid.Row="4" Grid.Column="0" x:Name="ShowExternalTools" VerticalAlignment="Top" Margin="2,7,2,0" Content="Show External Tools" Grid.ColumnSpan="2"/>
                                <TextBlock Grid.Row="5" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0">This feature will add "Launch Excel" and "Launch SQL Profiler" options to the advanced tool bar</TextBlock>

                                <CheckBox Grid.Row="6" Grid.Column="0" x:Name="ShowKeyBindings" VerticalAlignment="Top" Margin="2,7,2,0" Content="Show Key Bindings" Grid.ColumnSpan="2"/>
                                <TextBlock Grid.Row="7" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0">This feature shows a tab in the options screen to alter global hotkeys</TextBlock>

                            </Grid>
                        </GroupBox>
                        <GroupBox Header="VertiPaq Analyzer">
                            <Grid Margin="5,5,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>

                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <CheckBox Grid.Column="0" x:Name="VpaxIncludeTom" VerticalAlignment="Top" Content="Include TOM" Grid.ColumnSpan="2" Margin="2,7,2,0" />
                                <TextBlock Grid.Row="1" Grid.Column="1" TextWrapping="Wrap" Foreground="Gray" FontStyle="Italic" Margin="2,0,0,0">Include the complete Tabular Object Model (TOM) in the export for VertiPaq Analyzer (VPAX)</TextBlock>

                            </Grid>
                        </GroupBox>
                    </WrapPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>
